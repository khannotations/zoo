.panel{:name => "availability"}
  .container
    .contain
      %p.header Availability
      %p.text See which Zoo machines are open! The layout below approximates the physical layout of the Zoo.
      - animals = %w(viper hornet cricket newt termite python cicada bumblebee cobra frog tick turtle aphid ladybug chameleon rattlesnake scorpion perch dolphin kangaroo gator grizzly cardinal giraffe swan rhino monkey lion hare tiger zebra hippo jaguar macaw peacock raven hawk woodpecker)
      - sizes = [6, 6, 6, 1, 1, 4, 7, 7]
      - index = 0
      - offset = 0

      %p.big Open Zoo
      %table.animal-table
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
      .break
      %table.animal-table
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
      .break
      %table.animal-table.aisle
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1

      %p.big Closed Zoo (AKW 300)

      %table.animal-table.small
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
      .break

      %table.animal-table
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1
      %table.animal-table
        %tr
          - sizes[index].times do |num|
            = haml :animal_cell, :locals => {:a => animals[num+offset]}
          - offset += sizes[index]
          - index += 1

